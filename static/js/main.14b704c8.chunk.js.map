{"version":3,"sources":["components/about/about.js","components/context/AppContext.js","components/error/notfound.js","components/home/home.js","components/skills/skills.js","components/routing.js","components/main/App.js","reportWebVitals.js","index.js"],"names":["About","className","AppContext","createContext","AppContextProvider","children","useState","preset","setPreset","enterAnimation","setEnterAnimation","exitAnimation","setExitAnimation","Provider","value","NotFound","Home","vantaFog","setVantaFog","vantaRef","useRef","typedRef","parallaxRef","options","strings","typeSpeed","backSpeed","loop","loopCount","Infinity","smartBackspace","useEffect","Typed","current","parallax","Parallax","destroy","FOG","el","mouseControls","touchControls","gyroControls","highlightColor","midtoneColor","lowlightColor","baseColor","blurFactor","speed","zoom","ref","data-relative-input","data-depth","Skills","Routing","useContext","render","location","transitionKey","pathname","exact","path","component","App","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","Fragment","hashType","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.14b704c8.chunk.js","sourcesContent":["import React from 'react';\n\nconst About = () => {\n    return (\n        <div className=\"about-page\">\n            <h1>About page</h1>\n        </div>\n    )\n}\n\nexport default About;\n","import React, { createContext, useState } from \"react\";\n\nconst AppContext = createContext();\n\nexport const AppContextProvider = ({ children }) => {\n    const [preset, setPreset] = useState(\"roomToBottom\");\n    const [enterAnimation, setEnterAnimation] = useState(\"scaleUp\");\n    const [exitAnimation, setExitAnimation] = useState(\"moveToBottom\");\n\n    return (\n        <AppContext.Provider\n            value={{\n                preset,\n                enterAnimation,\n                exitAnimation,\n                setPreset,\n                setEnterAnimation,\n                setExitAnimation\n            }}\n        >\n            {children}\n        </AppContext.Provider>\n    );\n}\n\nexport default AppContext;\n","import React from 'react'\n\nconst NotFound = () => {\n    return (\n        <div>\n            <h1>NotFound page</h1>\n        </div>\n    )\n}\n\nexport default NotFound;\n","import React, { useEffect, useRef, useState } from 'react';\n\nimport Typed from 'typed.js';\nimport FOG from 'vanta/dist/vanta.fog.min';\nimport Parallax from 'parallax-js';\n\nimport './home.css';\n\nconst Home = () => {\n    const [vantaFog, setVantaFog] = useState(0);\n    const vantaRef = useRef(null)\n    const typedRef = useRef();\n    const parallaxRef = useRef();\n\n    const options = {\n        strings: [\n            'a Software Engineer',\n            'an RPA Developer and Consultant',\n            'a Data Science Enthusiast'\n        ],\n        typeSpeed: 50,\n        backSpeed: 80,\n        loop: true,\n        loopCount: Infinity,\n        smartBackspace: true\n    };\n\n    useEffect(() => {\n        const type = new Typed(typedRef.current, options);\n        const parallax = new Parallax(parallaxRef.current);\n        return () => {\n            parallax.destroy();\n        }\n        // eslint-disable-next-line\n    }, []);\n\n    useEffect(() => {\n        if (!vantaFog) {\n            setVantaFog(FOG({\n                el: vantaRef.current,\n                mouseControls: true,\n                touchControls: true,\n                gyroControls: true,\n                highlightColor: 0xa78be1,\n                midtoneColor: 0x6d7ede,\n                lowlightColor: 0x66e1cb,\n                baseColor: 0x541ed7,\n                blurFactor: 0.5,\n                speed: 2.00,\n                zoom: 2.00\n            }));\n        }\n        return () => {\n            if (vantaFog) vantaFog.destroy();\n        }\n    }, [vantaFog]);\n\n    return (\n        <div className=\"home-page\" ref={vantaRef}>\n            <div className=\"page-content\" ref={parallaxRef} data-relative-input=\"true\">\n                <div className=\"main-text\" data-depth=\"0.3\">\n                    <p>\n                        Hi\n                        <br />\n                        My name is\n                        <span className=\"name-text\">Vasundhara Sharma</span>\n                        and I'm\n                    </p>\n                    <div className=\"typing-text\">\n                        <span className=\"typing-text\" ref={typedRef}></span>\n                    </div>\n                </div>\n                <div className=\"background-image\" data-depth=\"0.9\"></div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home;\n","import React from 'react';\n\nconst Skills = () => {\n    return (\n        <div className=\"skills-page\">\n            <h1>Skills page</h1>\n        </div>\n    )\n}\n\nexport default Skills;\n","import React, { useContext } from 'react'\nimport { Route, Switch } from 'react-router-dom';\nimport { PageTransition } from '@steveeeie/react-page-transition';\n\nimport './common.css';\n\nimport About from './about/about';\nimport AppContext from './context/AppContext';\nimport NotFound from './error/notfound';\nimport Home from './home/home';\nimport Skills from './skills/skills';\n\nconst Routing = () => {\n    const { preset, enterAnimation, exitAnimation } = useContext(AppContext);\n\n    return (\n        <>\n            <Route\n                render={({ location }) => {\n                    return (\n                        <PageTransition\n                            preset={preset}\n                            enterAnimation={enterAnimation}\n                            exitAnimation={exitAnimation}\n                            transitionKey={location.pathname}\n                        >\n                            <div className=\"wrapper\">\n                                <Switch location={location}>\n                                    <Route exact path=\"/\" component={Home} />\n                                    <Route exact path=\"/about\" component={About} />\n                                    <Route exact path=\"/skills\" component={Skills} />\n                                    <Route exact path=\"/*\" component={NotFound} />\n                                </Switch>\n                            </div>\n                        </PageTransition>\n                    )\n                }}\n            />\n        </>\n    );\n}\n\nexport default Routing;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Routing from './../routing';\nimport './App.css';\n\nfunction App() {\n    return (\n        <>\n            <div className=\"links\">\n                <Link className=\"link\" to=\"/\">Home</Link>\n                <Link className=\"link\" to=\"/skills\">Skills</Link>\n                <Link className=\"link\" to=\"/about\">About</Link>\n            </div>\n            <Routing />\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/main/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { AppContextProvider } from './components/context/AppContext';\n\nReactDOM.render(\n    <React.Fragment>\n        <AppContextProvider>\n            <HashRouter hashType=\"slash\" basename={process.env.PUBLIC_URL}>\n                <App />\n            </HashRouter>\n        </AppContextProvider>\n    </React.Fragment>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}